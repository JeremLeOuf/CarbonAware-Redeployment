Initializing the backend...
Initializing modules...
- compute in modules/compute
- networking in modules/networking
Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Reusing previous version of hashicorp/random from the dependency lock file
- Installing hashicorp/aws v4.67.0...
- Installed hashicorp/aws v4.67.0 (signed by HashiCorp)
- Installing hashicorp/random v3.7.1...
- Installed hashicorp/random v3.7.1 (signed by HashiCorp)
Terraform has made some changes to the provider dependency selections recorded
in the .terraform.lock.hcl file. Review those changes and commit them to your
version control system if they represent changes you intended to make.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
module.networking.random_id.id: Refreshing state... [id=3bJrhA]
module.networking.data.aws_vpc.default: Reading...
module.networking.data.aws_vpc.default: Read complete after 0s [id=vpc-00b6d3cf9dd2e1018]
module.networking.aws_security_group.myapp_sg: Refreshing state... [id=sg-0c0549bc3ccee4822]
module.compute.aws_instance.myapp: Refreshing state... [id=i-0123bb937fad986a4]

Note: Objects have changed outside of Terraform

Terraform detected the following changes made outside of Terraform since the
last "terraform apply" which may have affected this plan:

  # module.compute.aws_instance.myapp has been deleted
  - resource "aws_instance" "myapp" {
      - id                                   = "i-0123bb937fad986a4" -> null
      - public_ip                            = "18.199.159.244" -> null
        tags                                 = {
            "Name" = "myapp-instance"
        }
        # (37 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.networking.aws_security_group.myapp_sg has been deleted
  - resource "aws_security_group" "myapp_sg" {
      - id                     = "sg-0c0549bc3ccee4822" -> null
        name                   = "myapp_sg_ddb26b84"
        # (9 unchanged attributes hidden)
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.

─────────────────────────────────────────────────────────────────────────────

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.compute.aws_instance.myapp will be created
  + resource "aws_instance" "myapp" {
      + ami                                  = "ami-0efc5833b9d584374"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "myapp-instance"
        }
      + tags_all                             = {
          + "Name" = "myapp-instance"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "20215e66ebe083cfe40db48607bb1b80b346f4dd"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # module.networking.aws_security_group.myapp_sg will be created
  + resource "aws_security_group" "myapp_sg" {
      + arn                    = (known after apply)
      + description            = "Security group for myapp"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "All traffic"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "HTTP"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
        ]
      + name                   = "myapp_sg_ddb26b84"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = "vpc-00b6d3cf9dd2e1018"
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  ~ instance_id        = "i-0123bb937fad986a4" -> (known after apply)
  ~ instance_public_ip = "18.199.159.244" -> (known after apply)
  ~ security_group_id  = "sg-0c0549bc3ccee4822" -> (known after apply)
module.networking.aws_security_group.myapp_sg: Creating...
module.networking.aws_security_group.myapp_sg: Creation complete after 2s [id=sg-095c826abbee86934]
module.compute.aws_instance.myapp: Creating...
module.compute.aws_instance.myapp: Still creating... [10s elapsed]
module.compute.aws_instance.myapp: Creation complete after 13s [id=i-078bdd0ddc2fd2a1d]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

instance_id = "i-078bdd0ddc2fd2a1d"
instance_public_ip = "3.8.235.116"
security_group_id = "sg-095c826abbee86934"
Initializing the backend...
Initializing modules...
Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Reusing previous version of hashicorp/random from the dependency lock file
- Using previously-installed hashicorp/aws v4.67.0
- Using previously-installed hashicorp/random v3.7.1

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
module.networking.random_id.id: Refreshing state... [id=3bJrhA]
module.networking.data.aws_vpc.default: Reading...
module.networking.data.aws_vpc.default: Read complete after 1s [id=vpc-0d7a5568908af02f5]
module.networking.aws_security_group.myapp_sg: Refreshing state... [id=sg-095c826abbee86934]
module.compute.aws_instance.myapp: Refreshing state... [id=i-078bdd0ddc2fd2a1d]

Note: Objects have changed outside of Terraform

Terraform detected the following changes made outside of Terraform since the
last "terraform apply" which may have affected this plan:

  # module.compute.aws_instance.myapp has been deleted
  - resource "aws_instance" "myapp" {
      - id                                   = "i-078bdd0ddc2fd2a1d" -> null
      - public_ip                            = "3.8.235.116" -> null
        tags                                 = {
            "Name" = "myapp-instance"
        }
        # (37 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # module.networking.aws_security_group.myapp_sg has been deleted
  - resource "aws_security_group" "myapp_sg" {
      - id                     = "sg-095c826abbee86934" -> null
        name                   = "myapp_sg_ddb26b84"
        # (9 unchanged attributes hidden)
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.

─────────────────────────────────────────────────────────────────────────────

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.compute.aws_instance.myapp will be created
  + resource "aws_instance" "myapp" {
      + ami                                  = "ami-0584590e5f0e97daa"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "myapp-instance"
        }
      + tags_all                             = {
          + "Name" = "myapp-instance"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "20215e66ebe083cfe40db48607bb1b80b346f4dd"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # module.networking.aws_security_group.myapp_sg will be created
  + resource "aws_security_group" "myapp_sg" {
      + arn                    = (known after apply)
      + description            = "Security group for myapp"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "All traffic"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "HTTP"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
        ]
      + name                   = "myapp_sg_ddb26b84"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = "vpc-0d7a5568908af02f5"
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  ~ instance_id        = "i-078bdd0ddc2fd2a1d" -> (known after apply)
  ~ instance_public_ip = "3.8.235.116" -> (known after apply)
  ~ security_group_id  = "sg-095c826abbee86934" -> (known after apply)
module.networking.aws_security_group.myapp_sg: Creating...
module.networking.aws_security_group.myapp_sg: Creation complete after 2s [id=sg-0ce29b5079211fc65]
module.compute.aws_instance.myapp: Creating...
module.compute.aws_instance.myapp: Still creating... [10s elapsed]
module.compute.aws_instance.myapp: Creation complete after 13s [id=i-06c2d2298df255828]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

instance_id = "i-06c2d2298df255828"
instance_public_ip = "3.76.213.72"
security_group_id = "sg-0ce29b5079211fc65"
